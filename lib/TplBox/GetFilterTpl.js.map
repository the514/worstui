{"version":3,"sources":["../../src/TplBox/GetFilterTpl.js"],"names":["GetFilterTpl","props","filterHandleChange","e","dataString","setState","dateValue","event","Event","bubbles","dateinput","dispatchEvent","filterInputHandleChange","console","log","target","value","onChange","filterHandleSelectChange","state","filterLinkageDataKey","obj","each","index","val","split","filterInputHandleSelectChange","dataValue","bind","key","filterKey","type","pHolder","input","SelectTpl","columnsDataSource","modelDataFilterKey","modelUrl","modelDataKey","modelDataValue","modelDataPlaceholder","modelDataFilterText","modelDataLinkage","modelDataColumn","modelDataParams"],"mappings":"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","file":"GetFilterTpl.js","sourcesContent":["import React, { Component } from 'react';\n// import FilterInput from './FilterInput';\nimport { Input, DatePicker } from 'antd';\nimport SelectBox from './SelectBox';\nimport Global from '../Global';\nimport $ from 'jquery';\n\n// const Option = Select.Option;\n// const RadioGroup = Radio.Group;\n// const CheckboxGroup = Checkbox.Group;\n\nclass GetFilterTpl extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state={\n      dataValue: null,\n      filterLinkageDataKey: \"\", // 筛选模式下的联查字段值\n      dateValue: \"\" // 日期值\n    };\n\n    this.filterHandleChange = this.filterHandleChange.bind(this);\n    this.filterInputHandleChange = this.filterInputHandleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // key:筛选参数名 type:筛选类型 k: react unique key pHolder: placeholder文字 onChange: 修改事件 val: 筛选值\n    let key = this.props.filterKey;\n    let type = this.props.type;\n    // let k = this.props.key;\n    let pHolder = this.props.pHolder;\n    let onChange = this.props.onChange;\n    let val = this.props.val;\n\n    let dataValue = null;\n\n    switch(type){\n\n      case \"text\":\n        // console.log(val);\n\n        dataValue = <div className=\"filter-item filter-item-text\">\n                      <Input placeholder={pHolder} data-filter={key} onChange={onChange} defaultValue={val[key]} />\n                    </div>;\n\n        break;\n      case \"date\":\n        // console.log(val);\n\n        dataValue = <div className=\"filter-item filter-item-date\">\n                      <DatePicker \n                        data-filter={key} \n                        onChange={ this.filterHandleChange } \n                        placeholder={pHolder} \n                      />\n                      <input\n                        type=\"hidden\"\n                        ref={(input)=> this.dateinput = input}\n                        data-filter={key}\n                        value={this.state.dateValue}\n                        onChange={ this.filterInputHandleChange }\n                      />\n                    </div>;\n\n        break;\n      case \"datetime\":\n\n        dataValue = <div className=\"filter-item filter-item-datetime\">\n                      <DatePicker\n                        showTime\n                        format=\"YYYY-MM-DD HH:mm:ss\"\n                        placeholder={pHolder}\n                        onChange={ this.filterHandleChange }\n                      />\n                      <input\n                        type=\"hidden\"\n                        ref={(input)=> this.dateinput = input}\n                        data-filter={key}\n                        value={this.state.dateValue}\n                        onChange={ this.filterInputHandleChange }\n                      />\n                    </div>\n\n        break;\n      case \"select\":\n\n        let SelectTpl = Global.columnsDataSource(key);\n\n        this.setState({filterLinkageDataKey: SelectTpl.modelDataFilterKey});\n\n        dataValue = <div className=\"filter-item filter-item-select\">\n                      <SelectBox \n                        modelUrl={SelectTpl.modelUrl} \n                        modelDataKey={SelectTpl.modelDataKey} \n                        modelDataValue={SelectTpl.modelDataValue} \n                        placeholder={SelectTpl.modelDataPlaceholder}\n                        filterText={SelectTpl.modelDataFilterText}\n                        isFilter={ true }\n                        onChange={ this.filterHandleSelectChange }\n                        modelDataLinkage={SelectTpl.modelDataLinkage}\n                        modelDataColumn={SelectTpl.modelDataColumn}\n                        modelDataParams={SelectTpl.modelDataParams}\n                      />\n                      <input\n                        type=\"hidden\"\n                        ref={(input)=> this.dateinput = input}\n                        data-filter={key}\n                        value={this.state.dateValue}\n                        onChange={ this.filterInputHandleSelectChange }\n                      />\n                    </div>;\n\n        break;\n      default:\n        dataValue = dataValue + \"\";\n\n    }\n\n    this.setState({\n      dataValue: dataValue\n    });\n  }\n\n  filterHandleChange = (e, dataString) => {\n\n    this.setState({\n      dateValue: dataString\n    });\n\n    var event = new Event('input', { bubbles: true });\n    this.dateinput.dispatchEvent(event);\n\n    this.filterInputHandleChange(event, dataString);\n\n  }\n\n  // datepicker on change function\n  filterInputHandleChange = (e, dataString) => {\n    console.log(e.target.value);\n    this.props.onChange(e, dataString);\n  }\n\n  filterHandleSelectChange = (dataString) => {\n    console.log(this.state.filterLinkageDataKey);\n    let obj = {};\n    $.each(this.state.filterLinkageDataKey, function(index, val) {\n      obj[val] = dataString.split(\",\")[index];\n    });\n\n    this.setState({\n      dateValue: obj\n    });\n\n    var event = new Event('input', { bubbles: true });\n    this.dateinput.dispatchEvent(event);\n\n    this.filterInputHandleChange(event, obj);\n\n  }\n\n  // select on change function\n  filterInputHandleSelectChange = (e, dataString) => {\n    console.log(e.target.value);\n    this.props.onChange(e, dataString);\n  }\n\n  render() {\n    return (\n      this.state.dataValue\n    );\n  }\n}\n\nexport default GetFilterTpl;"]}